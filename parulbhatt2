
#include required library as follows

library(rpart)
library(randomForest)
library(party)
library(plyr)

# set up working library
 setwd("~/Kaggle")

train <- read.csv("train.csv")
str(train)
test <- read.csv("test.csv")
str(test)

# Join together the test and train sets
test$Survived <- NA
combi <- rbind(train, test)
str(combi)

# Check what else might be missing
summary(combi)

# Convert to a string
combi$Name <- as.character(combi$Name)

# Adding variable: Title
combi$Title <- sapply(combi$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][2]})
combi$Title <- sub(' ', '', combi$Title)

# Combine small title groups
combi$Title[combi$Title %in% c('Mme', 'Mlle')] <- 'Mlle'
combi$Title[combi$Title %in% c('Capt', 'Don', 'Major', 'Sir')] <- 'Sir'
combi$Title[combi$Title %in% c('Dona', 'Lady', 'the Countess', 'Jonkheer')] <- 'Lady'

# Convert to a factor
combi$Title <- factor(combi$Title)

# Missing Embarked blanks
summary(combi$Embarked)
which(combi$Embarked == '')
combi$Embarked[c(62,830)] = "S"
combi$Embarked <- factor(combi$Embarked)

# Adding counter variable for Family size
combi$FamilySize <- combi$SibSp + combi$Parch + 1

# Handling missing Age NAs
summary(combi$Age)
 
Agefit <- rpart(Age ~ Pclass + Sex + SibSp + Parch + Fare + Embarked + Title + FamilySize, data=combi[!is.na(combi$Age),], method="anova")
combi$Age[is.na(combi$Age)] <- predict(Agefit, combi[is.na(combi$Age),])

#Adding variable: Family
combi$Surname <- sapply(combi$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][1]}) 
combi$FamilyID <- paste(as.character(combi$FamilySize), combi$Surname, sep="") 
combi$FamilyID[combi$FamilySize <= 2] <- 'Small' 
 
# cleansing family IDs
  famIDs <- data.frame(table(combi$FamilyID))
 famIDs <- famIDs[famIDs$Freq <= 2,]
 combi$FamilyID[combi$FamilyID %in% famIDs$Var1] <- 'Small'
  
# Convert to a factor
  combi$FamilyID <- factor(combi$FamilyID)
 
# New factor for Random Forests, only allowed <32 levels, so reduce number
  combi$FamilyID2 <- combi$FamilyID
 
# Convert back to string
 combi$FamilyID2 <- as.character(combi$FamilyID2)
combi$FamilyID2[combi$FamilySize <= 3] <- 'Small'
 
# And convert back to factor
combi$FamilyID2 <- factor(combi$FamilyID2)

# Missing Fare NAs
summary(combi$Fare)
which(is.na(combi$Fare))
combi$Fare[1044] <- median(combi$Fare, na.rm=TRUE)
 
# divide into test and train sets
train <- combi[1:891,]
test <- combi[892:1309,]

# Create Random Forest Ensemble
 set.seed(415)
 fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID2,
 data=train, importance=TRUE, ntree=2000)

# Plot importance variable
 varImpPlot(fit)
 
